---

- hosts: hosts
  remote_user: root

- hosts: containers
  remote_user: root
  gather_facts: false
  vars:
    lxd_container_source:
      type: image
      mode: pull
      server: https://images.linuxcontainers.org
      protocol: lxd
      alias: "{{ lxd_container_image | default('debian/buster/amd64') }}"
    lxd_container_config:
      limits.cpu: "{{ lxd_container_limits_cpu | default(2) | string}}"
      limits.memory: "{{ lxd_container_limits_memory | default('2GB') | string }}"
      security.nesting: "{{ lxd_container_security_nesting | default(false) | string }}"
  tasks:
    - name: lxd container installed and started
      community.general.lxd_container:
        name: "{{inventory_hostname}}"
        state: started
        source: "{{lxd_container_source}}"
        config: "{{lxd_container_config}}"
        profiles: ["default"]
        wait_for_ipv4_addresses: true
        timeout: 600
      delegate_to: "{{ lxd_host }}"

    - name: make sure host_vars directory is present for host
      local_action: file
      args:
        path: "{{inventory_dir}}/host_vars/{{inventory_hostname}}"
        state: directory


    - name: record variables for lxd container connection in host_vars
      local_action: copy
      args:
        content:
          ansible_connection: lxc_ssh
          ansible_host: "{{hostvars[lxd_host].ansible_host}}"
          ansible_ssh_extra_args: "{{inventory_hostname}}"
        dest: "{{inventory_dir}}/host_vars/{{inventory_hostname}}/lxd_host.auto.json"

    - name: refresh ansible inventory
      local_action: meta refresh_inventory

    # todo: is this the right place for setting this up
    - name: list ipv4 address for proxy
      command: lxc ls reverse-proxy --format=json
      register: lxd_container_json
      delegate_to: "{{ lxd_host }}"
      when: inventory_hostname == 'reverse-proxy'

    - name: set ipv4 address fact for proxy
      set_fact:
        lxd_container_address: "{{lxd_container_json.stdout | from_json | json_query('[0].state.network.eth0.addresses[0].address') }}"
      when: inventory_hostname == 'reverse-proxy'

    # todo: make this permanent (using ufw?)
    # todo: make interfaces configurable or auto-detect
    - name: add ipv4 forwarding for proxy
      command: "{{ item }}"
      with_items:
        - "iptables -t nat -A PREROUTING -i eth1 -p tcp --dport 80 -j DNAT --to {{ lxd_container_address }}:80"
        - "iptables -t nat -A PREROUTING -i eth1 -p tcp --dport 443 -j DNAT --to {{ lxd_container_address }}:443"
        - "iptables -I FORWARD -p tcp -d {{ lxd_container_address }} --dport 80 -j ACCEPT"
        - "iptables -I FORWARD -p tcp -d {{ lxd_container_address }} --dport 443 -j ACCEPT"
      delegate_to: "{{ lxd_host }}"
      when: inventory_hostname == 'reverse-proxy'

- hosts: containers
  remote_user: root
