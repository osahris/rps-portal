---

- name: proskive path
  file:
    path: "{{proskive_directory}}"
    state: directory

- import_role:
    name: docker

- name: clone proskive
  git:
    repo: "{{proskive_release_git_repo}}"
    dest: "{{proskive_release_directory}}"

- import_role:
    name: certificate

- import_role:
    name: nginx
  vars:
    nginx_vhost_server_names: ["{{proskive_server_name}}"]
    nginx_vhost_certificate_name: "{{proskive_server_name}}"
    nginx_vhost_custom: |
      server_name {{proskive_server_name}};
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Scheme $scheme;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-Port $server_port;
      proxy_set_header Host $http_host;
      location / {
        proxy_pass http://localhost:3000;
      }

- name: ensure proskive keycloak client
  local_action:
    module: keycloak_client
    auth_client_id: admin-cli
    auth_keycloak_url: "{{ proskive_keycloak_frontend_url }}"
    auth_realm: "{{ proskive_keycloak_management_realm }}"
    auth_username: "{{ proskive_keycloak_management_username }}"
    auth_password: "{{ proskive_keycloak_management_password }}"
    client_id: proskive-generic
    realm: "{{ proskive_keycloak_realm }}"
    client_authenticator_type: client-secret
    secret: "{{ proskive_openid_client_secret }}"
    redirect_uris: "{{proskive_keycloak_client_redirect_uris}}"
    direct_access_grants_enabled: yes # TODO find out why this is necessary
    default_roles: "{{proskive_keycloak_client_default_roles}}"
    public_client: true # TODO find out why this is necessary
    web_origins:
      - "+" # TODO find out why this is necessary
    state: present

- name: deploy proskive with docker compose
  docker_compose:
    project_src: "{{proskive_release_directory}}"
    files:
      - docker-compose_eigenes_keycloak.yml
  environment: "{{proskive_docker_compose_env}}"
