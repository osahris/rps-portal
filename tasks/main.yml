---
- name: "Create access_token for keycloak for user {{ keycloak_admin_username }}"
  local_action: uri
  args:
    url: "{{ keycloak_frontend_url }}/realms/master/protocol/openid-connect/token"
    method: POST
    validate_certs: "{{ keycloak_validate_certs }}"
    body_format: form-urlencoded
    body:
      username: "{{ keycloak_admin_username }}"
      password: "{{ keycloak_admin_password | mandatory }}"
      grant_type: "password"
      client_id: "admin-cli"
  register: keycloak_token
- name: "create mainrealm"
  community.general.keycloak_realm:
    auth_keycloak_url: "{{ keycloak_frontend_url }}"
    token: "{{ keycloak_token.json.access_token }}"
    id: "{{ keycloak_mainrealm.name }}"
    realm: "{{ keycloak_mainrealm.name }}"
    enabled: true
    state: present
- name: "mainrealm should have groups"
  community.general.keycloak_group:
    auth_keycloak_url: "{{ keycloak_frontend_url }}"
    token: "{{ keycloak_token.json.access_token }}"
    realm: "{{ keycloak_mainrealm.name }}"
    name: "{{ group }}"
    attributes:
      managed: "true"
    state: present
  loop: "{{ keycloak_mainrealm.groups|default([]) }}"
  loop_control:
    loop_var: group
- name: "mainrealm should have roles"
  community.general.keycloak_role:
    auth_keycloak_url: "{{ keycloak_frontend_url }}"
    token: "{{ keycloak_token.json.access_token }}"
    realm: "{{ keycloak_mainrealm.name }}"
    name: "{{ role }}"
    attributes:
      managed: "true"
    state: present
  loop: "{{ keycloak_mainrealm.roles|default([]) }}"
  loop_control:
    loop_var: role

- include_tasks: per_realm.yml
  loop: "{{ keycloak_subrealms }}"
