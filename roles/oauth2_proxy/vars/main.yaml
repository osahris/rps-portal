---
remote_path: "/app/{{oauth2_proxy_service_name}}"
oauth2_proxy_traefik_dynamic_config:
  http:
    routers:
      oauth2-proxy:
        # traefik will look at the host rule to order a certificate so add a separate rule for our hostname because this is used internally
        rule: "Host(`{{ oauth2_proxy_service_name }}`) && PathPrefix(`/oauth2/`)"
        entrypoints: websecure
        service: oauth2-proxy
        tls:
          certresolver: letsencrypt
    services:
      oauth2-proxy:
        loadBalancer:
          servers:
            - url: "http://{{ oauth2_proxy_service_name|replace('.', '') }}_oauth2-proxy_1:4180"

    middlewares:
      oauth2-auth:
        forwardAuth:
          address: "{{ oauth2_proxy_base_url }}/oauth2/auth"
          authResponseHeaders:
            - X-Auth-Request-Access-Token
            - X-Auth-Request-User
            - X-Auth-Request-Email
            - X-Auth-Request-Preferred-Username
            - X-Auth-Request-Groups
          # unclear if this is really needed and what it does but it is present everywhere in the docs
          trustForwardHeader: true
      oauth2-auth-admin-interface:
        forwardAuth:
          address: "{{ oauth2_proxy_base_url }}/oauth2/auth?allowed_groups=admin"
          authResponseHeaders:
            - X-Auth-Request-Access-Token
            - X-Auth-Request-User
            - X-Auth-Request-Email
            - X-Auth-Request-Preferred-Username
            - X-Auth-Request-Groups
          # unclear if this is really needed and what it does but it is present everywhere in the docs
          trustForwardHeader: true
      oauth2-errors:
        errors:
          status:
            - "401"
          service: oauth2-proxy
          query: "{{ oauth2_proxy_needs_login_redirect }}"
