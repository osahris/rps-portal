#!/bin/bash
set -e

# Assume the "entrypoint" logic or the "import" creates a PostgreSQL role `nextcloud`,
# and create the (usually default) role `postgres`, so the system user of the same name
# can be used to create database dumps for backup and migration purposes.

psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-EOSQL
	CREATE USER postgres WITH PASSWORD NULL;
	GRANT ALL PRIVILEGES ON DATABASE "$POSTGRES_DB" TO postgres;
	GRANT USAGE, SELECT ON ALL SEQUENCES IN SCHEMA public TO postgres;
EOSQL

# Because of the above, changed assumptions, this script no longer executes
# the following commands:
#	CREATE USER "$POSTGRES_NEXTCLOUD_USER" WITH LOGIN ENCRYPTED PASSWORD '$POSTGRES_NEXTCLOUD_PASSWORD';
#	CREATE DATABASE nextcloud TEMPLATE template0 ENCODING 'UNICODE';
#	ALTER DATABASE nextcloud OWNER TO nextcloud;
#	ALTER ROLE postgres WITH PASSWORD NULL;

