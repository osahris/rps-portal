---
- name: current host
  debug: 
    msg: 
    - "{{ ansible_ssh_host }}"
    - "{{ inventory_hostname }}"

- name: create directory
  file: path={{remote_path}} state=directory

- name: create skel directory
  file: path={{remote_path}}/skel state=directory

- name: copy all static files
  synchronize:
    recursive: true
    src: "./" # relative to ./files on local role path
    dest: "{{remote_path}}" # relative to ~/ on remote

- name: copy some templated .j2 files
  template:
    src: "{{item}}" # relative to ./templates on local role path
    dest: "{{remote_path}}/{{ item | regex_replace(role_path+'/templates/', '') | regex_replace('\\.j2', '') }}" # relative to ~/ on remote
  with_items:
    - "docker-compose.yaml.j2"
    - "env.j2"

- name: create directory for ssl certificates
  file:
    path: "/ssl-certs/"
    state: directory

- name: create traefik config directory
  file: path={{traefik_directory}}/conf.d state=directory

- name: copy traefik dynamic config
  copy:
    content: "{{ traefik_dynamic_config | to_nice_yaml(indent=2, width=777) }}"
    dest: "{{traefik_directory}}/conf.d/{{project_name}}.yaml"

# Creation of networks, images, containers
- name: create docker networks
  docker_network:
    name: "{{ item }}"
  loop:
  - "{{project_name}}"
  - "proxy"
  # driver: overlay


- name: deploy docker-compose stack
  docker_compose:
    project_src: "{{remote_path}}/"
    # add multiple docker-compose.yaml / .yml files below
    files: "{{item}}"
    # This option ensures that the images are rebuilt
    build: true
    pull: true
    remove_orphans: true
  with_items:
    - "docker-compose.yaml"

- name: wait for docker-compose stack deployment
  community.docker.docker_container_exec:
    container: "{{project_name}}_app"
    user: www-data
    command: php occ status --output=json
  register: _nextcloud_status_task
  changed_when: false
  retries: 180
  delay: 1
  until: _nextcloud_status_task is not failed


- name: install nextcloud
  when: not _nextcloud_status.installed
  community.docker.docker_container_exec:
    container: "{{project_name}}_app"
    user: www-data
    command:
      php occ maintenance:install --admin-user="{{MYSQL_USER}}" --admin-pass="{{MYSQL_ROOT_PASSWORD}}" --database="sqlite" --database-name="{{MYSQL_DATABASE}}" --database-host="{{MYSQL_HOST}}" --database-user="{{MYSQL_USER}}" --database-pass="{{MYSQL_PASSWORD}}"
  register: _nextcloud_status_task
  # https://docs.nextcloud.com/server/latest/admin_manual/configuration_server/occ_command.html

- import_tasks: config.yaml
  vars:
    nextcloud_config: "{{nextcloud_default_config}}"


# - import_tasks: keycloak-config.yaml

- import_tasks: keycloak_client.yaml
  when: nextcloud_with_keycloak_client

- import_tasks: apps/user_oidc.yaml
  when: nextcloud_with_user_oidc_app

# - import_tasks: apps/oidc_login.yaml
#   when: nextcloud_with_oidc_login_app

# - import_tasks: custom_theme/config.yaml
#   when: nextcloud_with_custom_theme
