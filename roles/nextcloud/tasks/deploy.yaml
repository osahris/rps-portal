---

- name: create directory
  file: path={{remote_path}} state=directory

- name: create skel directory
  file: path={{remote_path}}/skel state=directory

- name: create skel directory
  file: path={{remote_path}}/theme state=directory

- name: copy env
  template:
    src: "env.j2"
    dest: "{{remote_path}}/env"

- name: copy docker-compose.yaml
  template:
    src: "docker-compose.yaml.j2"
    dest: "{{remote_path}}/docker-compose.yaml"

- name: deploy database initialization script
  template:
    src: "create-nextcloud-role.sh.j2"
    dest: "{{remote_path}}/create-nextcloud-role.sh"

# Import the data from given SQL dump to the freshly deployed postgres
- import_tasks: import.yaml
  when: nextcloud_import

- name: deploy docker-compose stack
  docker_compose:
    project_src: "{{remote_path}}/"
    pull: true
    remove_orphans: true

- name: wait for docker-compose stack deployment
  community.docker.docker_container_exec:
    container: "{{nextcloud_app_container_name}}"
    user: www-data
    command: php occ status --output=json
  register: _nextcloud_status_task
  changed_when: false
  retries: 180
  delay: 1
  until: _nextcloud_status_task is not failed

- import_tasks: initialize.yaml

- import_tasks: custom_theme/setup.yaml
  when: nextcloud_with_custom_theme

- import_tasks: traefik.yaml
