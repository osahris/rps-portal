---
- name: create application directory
  file:
    path: "{{remote_path}}/{{ env }}"
    state: directory

- name: create application files for {{ env }}
  template:
    src: "{{item}}"
    dest: "{{remote_path}}/{{env}}/{{item | regex_replace('\\.j2$', '') }}"
  with_items:
    - "docker-compose.yaml.j2"
    - "env-mysql.j2"
    - "env-wordpress.j2"
    - "wp-extra-config.php.j2"

- name: deploy update script
  when: env == "staging"
  copy:
    src: files/deploy-staging-to-prod.sh
    dest: "{{remote_path}}/{{env}}/deploy-staging-to-prod.sh"
    mode: 0755

- name: deploy docker-compose stack
  docker_compose:
    project_src: "{{remote_path}}/{{ env }}"
    files: "docker-compose.yaml"
    pull: true
    remove_orphans: true

# bah. ansible doesn't support waiting for docker-compose setup. fck
- block:
    - name: get infos from wordpress container
      community.docker.docker_container_info:
        name: "wordpress-{{ env }}"
      register: result
    - name: wait for wordpress is running (either installation mode or normal)
      ansible.builtin.wait_for:
        port: 80
        host: "{{ result.container.NetworkSettings.Networks.proxy.IPAddress }}"

- name: check wordpress installation status
  community.docker.docker_container: &wp-cli
    name: ansible-wp-cli
    image: wordpress:cli
    pull: true
    # hihi. fail wordpress. it is even documented here: https://hub.docker.com/_/wordpress/
    user: 33:33
    command: "wp core is-installed"
    detach: false
    volumes_from: "wordpress-{{ env }}"
    env_file: "{{remote_path}}/{{ env }}/env-wordpress"
    networks:
      - name: "{{ env }}_wordpress-internal"
  ignore_errors: true
  register: wordpress_installation_status

- name: remove helper container again because ansible can't retrieve status when container is set to auto_remove
  community.docker.docker_container:
    name: ansible-wp-cli
    state: absent

- block:
    - name: install wordpress
      community.docker.docker_container:
        <<: *wp-cli
        command: "wp core install --admin_user=admin --admin_email={{ admin_email }} --url=https://{{ lookup('ansible.builtin.vars', 'wordpress_' + env + '_server_name') }} --title=rps --skip-email --admin_password={{ lookup('ansible.builtin.vars', 'wordpress_' + env + '_admin_password') }}"
    - name: remove helper container again because ansible can't retrieve status when container is set to auto_remove
      community.docker.docker_container:
        name: ansible-wp-cli
        state: absent
  when: wordpress_installation_status.status != 0

- name: forbid traffic to wp-admin
  ansible.builtin.lineinfile:
    path: /var/lib/docker/volumes/prod_wordpress/_data/.htaccess
    search_string: 'RewriteRule "^wp-admin/" "-" [F]'
    insertafter: "RewriteBase /"
    line: 'RewriteRule "^wp-admin/" "-" [F]'
  when: env == "prod"

- name: install traefik dynamic config
  copy:
    content: "{{ lookup('ansible.builtin.vars', 'wordpress_' + env + '_traefik_dynamic_config') }}"
    dest: "{{traefik_directory}}/conf.d/wordpress-{{ env }}.yaml"
