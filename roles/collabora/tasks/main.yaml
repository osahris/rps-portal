---

# - import_role:
#     name: docker

- name: create directory
  file: path={{remote_path}} state=directory

- name: copy all static files
  synchronize:
    recursive: true
    src: "./" # relative to ./files on local role path
    dest: "{{remote_path}}" # relative to ~/ on remote

- name: copy some templated .j2 files
  template:
    src:  "{{item}}" # relative to ./templates on local role path
    dest: "{{remote_path}}/{{ item | regex_replace(role_path+'/templates/', '') | regex_replace('\\.j2', '') }}" # relative to ~/ on remote
  with_items:
    - "docker-compose.yaml.j2"
    - "env.j2"

- name: create directory for ssl certificates
  file:
    path: "/ssl-certs/"
    state: directory

- name: create traefik config directory
  file: path={{traefik_directory}}/conf.d state=directory

- name: copy traefik dynamic config
  copy:
    content: "{{ traefik_dynamic_config | to_nice_yaml(indent=2, width=777) }}"
    dest:    "{{traefik_directory}}/conf.d/{{project_name}}.yaml"

# Creation of networks, images, containers
- name: create docker networks
  docker_network:
    name: "proxy"

- name: deploy docker-compose stack
  docker_compose:
    project_src: "{{remote_path}}/"
    # add multiple docker-compose.yaml / .yml files below
    files: "{{item}}"
    # This option ensures that the images are rebuilt
    build: true
  with_items:
    - "docker-compose.yaml"

# The below part is redundant since the docker container is now via docker-compose.yaml deployed 
# - name: collabora docker container
#   community.docker.docker_container:
#     name: collabora
#     image: "{{collabora_domain_image}}"
#     state: started
#     restart: yes
#     container_default_behavior: no_defaults
#     ports:
#      - "9980:9980"
#      - "[::]:9980:9980"
#     env: "{{collabora_docker_env}}"
#     capabilities:
#       - MKNOD
#       # - SYS_CHROOT
#       # - FOWNER
