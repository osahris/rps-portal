---
# Ansible variables
project_name: "nextcloud" #{{role_name}}"
remote_path: "/app/{{inventory_hostname}}/{{project_name}}"
project_domain_name: "{{inventory_hostname}}"

# TBD: generate password automatically
# nextcloud_postgres_password: "{{ nextcloud_postgres_password | default(lookup('/dev/null length=32 chars=ascii_letters,digits')) }}"
nextcloud_postgres_password: "<kznm'njyflj,eltncvtybnm!1"



# # # ------------------------------------------ #
# # # Reverse proxy and SSL certification config #
# # # ------------------------------------------ #
traefik_directory:          "/app/{{inventory_hostname}}/traefik"
traefik_dashboard_hostname: "traefik.{{project_domain_name}}"
traefik_certresolver:       "letsencrypt"
letsencrypt_account_email:  "{{ admin_email }}"
app_port: "80"

# # For each new running service add below a traefik router and a traefik service
traefik_dynamic_config:
  http:
    routers:

      nextcloud:
          # rule: "Host(`{{project_domain_name}}`) && ( PathPrefix(`/api/`) || Path(`/api`) ) )"
          rule: "Host(`nextcloud.{{project_domain_name}}`)"
          # rule: "Host(`{{project_domain_name}}`)"
          entrypoints: websecure
          # middlewares:
          #   - oauth2-proxy-auth-redirect
          tls:
            certresolver: "{{traefik_certresolver}}"
            domains:
            - main: "nextcloud.{{project_domain_name}}"
            # - main: "{{project_domain_name}}"
              sans:
                - "{{traefik_dashboard_hostname}}"
          service: nextcloud

    services:
      nextcloud:
        loadBalancer:
          servers:
            - url: "http://{{project_name}}_app:{{app_port}}" # "http://container_name:container_port"




# # ------------------------------------------ #


_nextcloud_user_oidc_provider: "{{_nextcloud_user_oidc_provider_cmd.stdout|from_json}}"

nextcloud_docker_app_container_default_volumes:
- nextcloud:/var/www/html
- apps:/var/www/html/custom_apps
- config:/var/www/html/config
- data:/var/www/html/data
- ./themes:/var/www/html/themes
- ./skel:/srv/nextcloud/skel

nextcloud_docker_app_container_custom_ca_certificates_volumes:
- "{{nextcloud_project_directory}}/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt:ro"
#- "{{nextcloud_project_directory}}/certs/ca-certificates.crt:/var/www/html/resources/config/ca-bundle.crt:ro"

nextcloud_docker_app_container_custom_themes_volumes:
- "{{nextcloud_project_directory}}/themes/rps/core/templates/layout.user.php:/var/www/html/core/templates/layout.user.php:ro"
#- "{{nextcloud_project_directory}}/ContentSecurityPolicy.php:/var/www/html/lib/public/AppFramework/Http/ContentSecurityPolicy.php:ro"

# nextcloud_docker_compose:
#   version: '3'

#   services:
#     db:
#       image: postgres:14
#       restart: always
#       volumes:
#         - db:/var/lib/postgresql/data
#       environment:
#         POSTGRES_DB: nextcloud
#         POSTGRES_USER: nextcloud
#         POSTGRES_PASSWORD: "{{nextcloud_postgres_password}}"

#     redis:
#       image: redis:alpine
#       restart: always

#     app:
#       image: nextcloud:apache
#       restart: always
#       volumes: "{{ nextcloud_docker_app_container_default_volumes 
#         + (nextcloud_with_custom_ca_certificates|ternary(nextcloud_docker_app_container_custom_ca_certificates_volumes,[])) 
#         + (nextcloud_with_custom_theme|ternary(nextcloud_docker_app_container_custom_themes_volumes,[])) 
#         }}"
#       environment:
#         VIRTUAL_HOST: "{{ nextcloud_server_name }}"
#         REDIS_HOST: redis
#         POSTGRES_HOST: db
#         POSTGRES_DB: "{{nextcloud_postgres_db}}"
#         POSTGRES_USER: "{{nextcloud_postgres_user}}"
#         POSTGRES_PASSWORD: "{{nextcloud_postgres_password}}"
#         OVERWRITEPROTOCOL: https
#         OVERWRITEHOST: "{{ nextcloud_server_name }}"
#         NEXTCLOUD_TRUSTED_DOMAINS: "{{ nextcloud_server_name }}"
#       depends_on:
#         - db
#         - redis
#       networks:
#         - proxy
#         - default

#     cron:
#       image: nextcloud:apache
#       restart: always
#       volumes:
#         - nextcloud:/var/www/html
#       entrypoint: /cron.sh
#       depends_on:
#         - db
#         - redis

#   volumes:
#     db:
#     nextcloud:
#     apps:
#     config:
#     data:
#     themes:

#   networks:
#     proxy:
#       external: true

nextcloud_traefik_dynamic_config:
  http:
    routers: "{{ { nextcloud_project_name : nextcloud_traefik_router } }}"
    services: "{{ { nextcloud_project_name : nextcloud_traefik_service } }}"
    middlewares: "{{ 
      { 
        nextcloud_project_name + '-redirect-dav' : nextcloud_traefik_redirect_dav_middleware,
      } | combine(nextcloud_with_custom_theme|ternary({
              nextcloud_project_name + '-redirect-header' : nextcloud_traefik_redirect_header_middleware,
              nextcloud_project_name + '-content-security-policy-header' : nextcloud_traefik_content_security_policy_header_middleware,
      },{})) }}"

nextcloud_traefik_router:
  rule: "Host(`{{nextcloud_server_name}}`)"
  service: "{{nextcloud_project_name}}"
  entrypoints: websecure
  middlewares: "{{ 
    [
      nextcloud_project_name+'-redirect-dav'
    ] + (nextcloud_with_custom_theme|ternary([
      nextcloud_project_name+'-redirect-header',
      nextcloud_project_name+'-content-security-policy-header',
    ],[])) }}"
nextcloud_traefik_service:
  loadBalancer:
    servers:
      - url: "{{nextcloud_traefik_url}}"
nextcloud_traefik_redirect_dav_middleware:
  redirectRegex:
    permanent: true
    regex: "https://(.*)/.well-known/(card|cal)dav"
    replacement: "https://${1}/remote.php/dav/"

nextcloud_traefik_redirect_header_middleware:
  redirectRegex:
    regex: "^https://(.*)/header.js$"
    replacement: "https://{{header_server_name}}/header.js"

nextcloud_traefik_content_security_policy_header_middleware:
  headers:
    contentSecurityPolicy: >
      default-src 'none';
      base-uri 'none';
      manifest-src 'self';
      script-src 'self';
      style-src 'self' 'unsafe-inline';
      img-src 'self' data: blob:;
      font-src 'self' data:;
      connect-src 'self';
      media-src 'self';
      frame-src 'self';
      frame-ancestors 'self';
      form-action 'self'

nextcloud_traefik_url: "http://{{nextcloud_app_container_name}}"

nextcloud_custom_theme_config:
  system:
    theme: "{{nextcloud_custom_theme_name}}"
