# -*- mode: ruby -*-
# vi: set ft=ruby :

# vagrant setup with virtualbox as a backend for deploying lxd based
# infrastructure on a local machine

# filename for a second disk
disk = './secondDisk.vdi'

Vagrant.configure("2") do |config|
  config.vm.box = "generic/debian10"
  config.vm.box_check_update = false

  # we went for a private network here. To support this, you
  # can add the ip below to /etc/hosts to be able to use
  # name-based ansible configuration
  config.vm.network "private_network", ip: "192.168.33.15"

  config.vm.provider "virtualbox" do |vb|
    vb.gui = false

    unless File.exist?(disk)
      vb.customize ['createhd', '--filename', disk, '--variant', 'Fixed', '--size', 10 * 1024]
    end

    vb.memory = "3076"
    vb.customize ['storageattach', :id,  '--storagectl', 'IDE Controller', '--port', 1, '--device', 0, '--type', 'hdd', '--medium', disk]
  end

  # shell script for initial setup as needed by ansible roles
  config.vm.provision "shell", inline: <<-SHELL
    apt-get update && apt-get install -y ssh python3 parted btrfs-progs

    echo "creating a btrfs volume & mount it at /lxd"
    parted /dev/sdb mklabel msdos
    parted /dev/sdb mkpart primary 512 100%
    mkfs.btrfs /dev/sdb1
    mkdir /lxd
    echo `blkid /dev/sdb1 | awk '{print$2}' | sed -e 's/"//g'` /lxd   btrfs   noatime,nobarrier   0   0 >> /etc/fstab
    mount /lxd

    echo "add ssh keys"
    sed -i 's/^#PasswordAuthentication\ yes/PasswordAuthentication\ no/' /etc/ssh/sshd_config
    mkdir -p /root/.ssh && chmod 700 /root/.ssh
    # add your ssh key here to be able to deploy to this vm using ansible
    echo "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIMk6WrcrPH+uW6f7DzixRxMn+utazezYVmN2CRdY1W2X" > /root/.ssh/authorized_keys
    echo "127.0.0.1 lxd lxd-host" >> /etc/hosts
  SHELL
end
